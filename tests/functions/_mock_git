#!/usr/bin/env zsh

function _mock_git_clone {
  # this is a bit unusual, but we're going to echo to fd3 so that we can get debug info
  # fd3 is not an open fd, so this means that we need to redirect 3>/dev/null or to 3>&1
  # for anything that uses this mock
  @echo "fakegit clone $@" >&3

  local giturl=${@[-2]}
  local bundledir=${@[-1]}
  local reponame=${${giturl%.git}:t}

  if [[ ! -d "$TEST_HOME/fakerepos/$reponame" ]]; then
    echo >&2 "Fake repo not found '$reponame'."
    return 1
  elif [[ -d "$bundledir" ]]; then
    echo >&2 "Fake repo already fake cloned '$giturl'."
    return 1
  fi

  cp -a "$TEST_HOME/fakerepos/$reponame" "$bundledir"
}

if [[ "$1" = "-C" ]]; then
  shift
  GITPATH="$1"
  shift
fi

cmd="$1"
shift
if (( $+functions[_mock_git_${cmd}] )); then
  _mock_git_${cmd} "$@"
  return $?
else
  echo >&2 "git command not mocked '${cmd}'... falling back to real git."
  if [[ -n "$GITPATH" ]]; then
    command git -C "$GITPATH" $cmd "$@"
  else
    command git $cmd "$@"
  fi
fi
